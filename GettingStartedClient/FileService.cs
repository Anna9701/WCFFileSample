//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FileServiceLib
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FileNotOpenedFault", Namespace="http://schemas.datacontract.org/2004/07/FileServiceLib")]
    public partial class FileNotOpenedFault : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string MessageField;
        
        private string OperationField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message
        {
            get
            {
                return this.MessageField;
            }
            set
            {
                this.MessageField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Operation
        {
            get
            {
                return this.OperationField;
            }
            set
            {
                this.OperationField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FileAreadyInUseFault", Namespace="http://schemas.datacontract.org/2004/07/FileServiceLib")]
    public partial class FileAreadyInUseFault : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string MessageField;
        
        private string OperationField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message
        {
            get
            {
                return this.MessageField;
            }
            set
            {
                this.MessageField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Operation
        {
            get
            {
                return this.OperationField;
            }
            set
            {
                this.OperationField = value;
            }
        }
    }
}


[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ServiceModel.ServiceContractAttribute(ConfigurationName="IFileService")]
public interface IFileService
{
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileService/CloseFile", ReplyAction="http://tempuri.org/IFileService/CloseFileResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(FileServiceLib.FileNotOpenedFault), Action="http://tempuri.org/IFileService/CloseFileFileNotOpenedFaultFault", Name="FileNotOpenedFault", Namespace="http://schemas.datacontract.org/2004/07/FileServiceLib")]
    bool CloseFile(string token);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileService/CloseFile", ReplyAction="http://tempuri.org/IFileService/CloseFileResponse")]
    System.Threading.Tasks.Task<bool> CloseFileAsync(string token);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileService/OpenFile", ReplyAction="http://tempuri.org/IFileService/OpenFileResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(FileServiceLib.FileAreadyInUseFault), Action="http://tempuri.org/IFileService/OpenFileFileAreadyInUseFaultFault", Name="FileAreadyInUseFault", Namespace="http://schemas.datacontract.org/2004/07/FileServiceLib")]
    string OpenFile();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileService/OpenFile", ReplyAction="http://tempuri.org/IFileService/OpenFileResponse")]
    System.Threading.Tasks.Task<string> OpenFileAsync();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileService/WriteToFile", ReplyAction="http://tempuri.org/IFileService/WriteToFileResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(FileServiceLib.FileNotOpenedFault), Action="http://tempuri.org/IFileService/WriteToFileFileNotOpenedFaultFault", Name="FileNotOpenedFault", Namespace="http://schemas.datacontract.org/2004/07/FileServiceLib")]
    void WriteToFile(string text);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileService/WriteToFile", ReplyAction="http://tempuri.org/IFileService/WriteToFileResponse")]
    System.Threading.Tasks.Task WriteToFileAsync(string text);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileService/ReadFromFile", ReplyAction="http://tempuri.org/IFileService/ReadFromFileResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(FileServiceLib.FileNotOpenedFault), Action="http://tempuri.org/IFileService/ReadFromFileFileNotOpenedFaultFault", Name="FileNotOpenedFault", Namespace="http://schemas.datacontract.org/2004/07/FileServiceLib")]
    string ReadFromFile(int length);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileService/ReadFromFile", ReplyAction="http://tempuri.org/IFileService/ReadFromFileResponse")]
    System.Threading.Tasks.Task<string> ReadFromFileAsync(int length);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileService/ReadAllFromFile", ReplyAction="http://tempuri.org/IFileService/ReadAllFromFileResponse")]
    [System.ServiceModel.FaultContractAttribute(typeof(FileServiceLib.FileNotOpenedFault), Action="http://tempuri.org/IFileService/ReadAllFromFileFileNotOpenedFaultFault", Name="FileNotOpenedFault", Namespace="http://schemas.datacontract.org/2004/07/FileServiceLib")]
    string ReadAllFromFile();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileService/ReadAllFromFile", ReplyAction="http://tempuri.org/IFileService/ReadAllFromFileResponse")]
    System.Threading.Tasks.Task<string> ReadAllFromFileAsync();
}

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public interface IFileServiceChannel : IFileService, System.ServiceModel.IClientChannel
{
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class FileServiceClient : System.ServiceModel.ClientBase<IFileService>, IFileService
{
    
    public FileServiceClient()
    {
    }
    
    public FileServiceClient(string endpointConfigurationName) : 
            base(endpointConfigurationName)
    {
    }
    
    public FileServiceClient(string endpointConfigurationName, string remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public FileServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public FileServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(binding, remoteAddress)
    {
    }
    
    public bool CloseFile(string token)
    {
        return base.Channel.CloseFile(token);
    }
    
    public System.Threading.Tasks.Task<bool> CloseFileAsync(string token)
    {
        return base.Channel.CloseFileAsync(token);
    }
    
    public string OpenFile()
    {
        return base.Channel.OpenFile();
    }
    
    public System.Threading.Tasks.Task<string> OpenFileAsync()
    {
        return base.Channel.OpenFileAsync();
    }
    
    public void WriteToFile(string text)
    {
        base.Channel.WriteToFile(text);
    }
    
    public System.Threading.Tasks.Task WriteToFileAsync(string text)
    {
        return base.Channel.WriteToFileAsync(text);
    }
    
    public string ReadFromFile(int length)
    {
        return base.Channel.ReadFromFile(length);
    }
    
    public System.Threading.Tasks.Task<string> ReadFromFileAsync(int length)
    {
        return base.Channel.ReadFromFileAsync(length);
    }
    
    public string ReadAllFromFile()
    {
        return base.Channel.ReadAllFromFile();
    }
    
    public System.Threading.Tasks.Task<string> ReadAllFromFileAsync()
    {
        return base.Channel.ReadAllFromFileAsync();
    }
}
